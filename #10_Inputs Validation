
---

## 🛡️ **الدرس 10: التحقق من المدخلات – Input Validation in PHP**

### 🔹 ما هو التحقق من المدخلات؟

هو التأكد من أن البيانات التي يُدخلها المستخدم **صحيحة وآمنة** قبل معالجتها أو تخزينها، وذلك لحماية التطبيق من الأخطاء والاختراقات (مثل XSS أو استغلالات أخرى).

---

## ✅ **1. التحقق اليدوي (Manual Validation)**

نفحص إذا كانت البيانات موجودة، غير فارغة، وصحيحة منطقيًا.

```php
<?php
if (isset($_POST['name']) && !empty($_POST['name'])) {
    echo "مرحباً، " . $_POST['name'];
} else {
    echo "يرجى إدخال الاسم.";
}
?>
```

---

## 🧰 **2. دوال مهمة للتحقق والأمان:**

### 🔸 `isset()`

تفحص ما إذا كان المتغير مُعرّفًا وموجودًا.

```php
isset($_POST['email']);
```

---

### 🔸 `empty()`

تفحص إن كان المتغير **فارغًا** (مثل "", 0, null، أو غير موجود).

```php
empty($_POST['email']);
```

---

### 🔸 `htmlspecialchars()`

تحوّل رموز HTML الخاصة (مثل `<`, `>`, `"`) إلى رموز آمنة لتجنّب XSS.

```php
$name = htmlspecialchars($_POST['name']);
```

---

## ✅ **مثال كامل:**

```php
<?php
if (isset($_POST['name']) && !empty($_POST['name'])) {
    $name = htmlspecialchars($_POST['name']);
    echo "مرحباً، $name!";
} else {
    echo "يرجى إدخال اسمك.";
}
?>
```

---

## ⚠️ **نصائح أمان:**

* لا تثق أبدًا في مدخلات المستخدم بدون تحقق.
* استخدم `htmlspecialchars()` أو `filter_var()` قبل الطباعة أو الحفظ.
* تحقق من نوع البيانات (مثلاً: هل البريد الإلكتروني صحيح؟ هل الرقم فعلاً رقم؟).

---

## 🧪 **التمرين:**

أنشئ نموذجًا يطلب من المستخدم:

* الاسم
* العمر

ثم تحقق:

* أن كلا الحقلين غير فارغ.
* أن العمر رقم صحيح.
* واطبع رسالة مثل:

> "أهلاً أحمد، عمرك 22 سنة."

